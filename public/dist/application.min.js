"use strict";var ApplicationConfiguration=function(){var applicationModuleName="examz",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("ajudas"),ApplicationConfiguration.registerModule("alternativas"),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("clemprestimos"),ApplicationConfiguration.registerModule("clientes"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("curso-disciplinas"),ApplicationConfiguration.registerModule("cursos"),ApplicationConfiguration.registerModule("devolucaos"),ApplicationConfiguration.registerModule("disciplinas"),ApplicationConfiguration.registerModule("exames"),ApplicationConfiguration.registerModule("filmes"),ApplicationConfiguration.registerModule("home"),ApplicationConfiguration.registerModule("membros"),ApplicationConfiguration.registerModule("pergunta-resolvidas"),ApplicationConfiguration.registerModule("perguntas"),ApplicationConfiguration.registerModule("resolucaos"),ApplicationConfiguration.registerModule("tag-perguntas"),ApplicationConfiguration.registerModule("tags"),ApplicationConfiguration.registerModule("tarefas"),ApplicationConfiguration.registerModule("teste"),ApplicationConfiguration.registerModule("users"),angular.module("ajudas").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Ajudas","ajudas","dropdown","/ajudas(/create)?"),Menus.addSubMenuItem("topbar","ajudas","Lista Ajudas","ajudas"),Menus.addSubMenuItem("topbar","ajudas","Nova Ajuda","ajudas/create")}]),angular.module("ajudas").config(["$stateProvider",function($stateProvider){$stateProvider.state("listAjudas",{url:"/ajudas",templateUrl:"modules/ajudas/views/list-ajudas.client.view.html"}).state("createAjuda",{url:"/ajudas/create",templateUrl:"modules/ajudas/views/create-ajuda.client.view.html"}).state("viewAjuda",{url:"/ajudas/:ajudaId",templateUrl:"modules/ajudas/views/view-ajuda.client.view.html"}).state("editAjuda",{url:"/ajudas/:ajudaId/edit",templateUrl:"modules/ajudas/views/edit-ajuda.client.view.html"})}]),angular.module("ajudas").controller("AjudasController",["$scope","$stateParams","$location","Authentication","Ajudas","Perguntas",function($scope,$stateParams,$location,Authentication,Ajudas,Perguntas){$scope.authentication=Authentication,$scope.create=function(){var ajuda=new Ajudas({tipo:this.tipo,titulo:this.titulo,conteudo:this.conteudo,_pergunta:this.pergunta._id});console.log(this.tipo),ajuda.$save(function(response){$scope.tipo="",$scope.titulo="",$scope.conteudo="",$location.path("ajudas/create")},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.listPerguntas=function(){$scope.perguntas=Perguntas.listar()},$scope.remove=function(ajuda){if(ajuda){ajuda.$remove();for(var i in $scope.ajudas)$scope.ajudas[i]===ajuda&&$scope.ajudas.splice(i,1)}else $scope.ajuda.$remove(function(){$location.path("ajudas")})},$scope.update=function(){var ajuda=$scope.ajuda;ajuda.$update(function(){$location.path("ajudas/"+ajuda._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.ajudas=Ajudas.query()},$scope.findOne=function(){$scope.ajuda=Ajudas.get({ajudaId:$stateParams.ajudaId})},$scope.direct=function(){$location.path("ajudas/create")}}]),angular.module("ajudas").factory("Ajudas",["$resource",function($resource){return $resource("ajudas/:ajudaId",{ajudaId:"@_id"},{update:{method:"PUT"}})}]),angular.module("alternativas").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Alternativas","alternativas","dropdown","/alternativas(/create)?"),Menus.addSubMenuItem("topbar","alternativas","Lista Alternativas","alternativas"),Menus.addSubMenuItem("topbar","alternativas","Nova Alternativa","alternativas/create")}]),angular.module("alternativas").config(["$stateProvider",function($stateProvider){$stateProvider.state("listAlternativas",{url:"/alternativas",templateUrl:"modules/alternativas/views/list-alternativas.client.view.html"}).state("createAlternativa",{url:"/alternativas/create",templateUrl:"modules/alternativas/views/create-alternativa.client.view.html"}).state("viewAlternativa",{url:"/alternativas/:alternativaId",templateUrl:"modules/alternativas/views/view-alternativa.client.view.html"}).state("editAlternativa",{url:"/alternativas/:alternativaId/edit",templateUrl:"modules/alternativas/views/edit-alternativa.client.view.html"})}]),angular.module("alternativas").controller("AlternativasController",["$scope","$stateParams","$location","Authentication","Alternativas","Perguntas",function($scope,$stateParams,$location,Authentication,Alternativas,Perguntas){$scope.authentication=Authentication,$scope.create=function(){var alternativa=new Alternativas({conteudo:this.conteudo,isCorrecte:this.isCorrecte,letra:this.letra,imagem:this.imagem,pergunta:this.pergunta._id});alternativa.$save(function(response){$scope.conteudo="",$scope.isCorrecte="",$scope.letra="",$scope.imagem="",$location.path("alternativas/create")},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(alternativa){if(alternativa){alternativa.$remove();for(var i in $scope.alternativas)$scope.alternativas[i]===alternativa&&$scope.alternativas.splice(i,1)}else $scope.alternativa.$remove(function(){$location.path("alternativas")})},$scope.listPerguntas=function(){$scope.perguntas=Perguntas.listar(),$scope.perguntas2=Perguntas.byExame({perguntaId:"562679b05cea858510e475e5"})},$scope.update=function(){var alternativa=$scope.alternativa;alternativa.$update(function(){$location.path("alternativas/"+alternativa._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.alternativas=Alternativas.query()},$scope.findOne=function(){$scope.alternativa=Alternativas.get({alternativaId:$stateParams.alternativaId})},$scope.direct=function(){$location.path("alternativas/create")},$scope.callFunctions=function(){$scope.findOne(),$scope.perguntas=Perguntas.listar()}}]),angular.module("alternativas").factory("Alternativas",["$resource",function($resource){return $resource("alternativas/:alternativaId",{alternativaId:"@_id"},{update:{method:"PUT"}})}]),angular.module("articles").run(["Menus",function(Menus){}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("curso-disciplinas").run(["Menus",function(Menus){}]),angular.module("curso-disciplinas").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCursoDisciplinas",{url:"/curso-disciplinas",templateUrl:"modules/curso-disciplinas/views/list-curso-disciplinas.client.view.html"}).state("createCursoDisciplina",{url:"/curso-disciplinas/create",templateUrl:"modules/curso-disciplinas/views/create-curso-disciplina.client.view.html"}).state("viewCursoDisciplina",{url:"/curso-disciplinas/:cursoDisciplinaId",templateUrl:"modules/curso-disciplinas/views/view-curso-disciplina.client.view.html"}).state("editCursoDisciplina",{url:"/curso-disciplinas/:cursoDisciplinaId/edit",templateUrl:"modules/curso-disciplinas/views/edit-curso-disciplina.client.view.html"})}]),angular.module("curso-disciplinas").controller("CursoDisciplinasController",["$scope","$stateParams","$location","Authentication","CursoDisciplinas","Cursos","Disciplinas",function($scope,$stateParams,$location,Authentication,CursoDisciplinas,Cursos,Disciplinas){$scope.authentication=Authentication,$scope.create=function(){var cursoDisciplina=new CursoDisciplinas({curso:this.curso._id,disciplina:this.disciplina._id});cursoDisciplina.$save(function(response){$location.path("curso-disciplinas/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(cursoDisciplina){if(cursoDisciplina){cursoDisciplina.$remove();for(var i in $scope.cursoDisciplinas)$scope.cursoDisciplinas[i]===cursoDisciplina&&$scope.cursoDisciplinas.splice(i,1)}else $scope.cursoDisciplina.$remove(function(){$location.path("curso-disciplinas")})},$scope.listaCursosDis=function(){$scope.cursos=Cursos.listar(),$scope.disciplinas=Disciplinas.listar()},$scope.update=function(){var cursoDisciplina=$scope.cursoDisciplina;cursoDisciplina.$update(function(){$location.path("curso-disciplinas/"+cursoDisciplina._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.cursoDisciplinas=CursoDisciplinas.query()},$scope.findOne=function(){$scope.cursoDisciplina=CursoDisciplinas.get({cursoDisciplinaId:$stateParams.cursoDisciplinaId})}}]),angular.module("curso-disciplinas").factory("CursoDisciplinas",["$resource",function($resource){return $resource("curso-disciplinas/:cursoDisciplinaId",{cursoDisciplinaId:"@_id"},{update:{method:"PUT"}})}]),angular.module("cursos").run(["Menus",function(Menus){}]),angular.module("cursos").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCursos",{url:"/cursos",templateUrl:"modules/cursos/views/list-cursos.client.view.html"}).state("createCurso",{url:"/cursos/create",templateUrl:"modules/cursos/views/create-curso.client.view.html"}).state("viewCurso",{url:"/cursos/:cursoId",templateUrl:"modules/cursos/views/view-curso.client.view.html"}).state("editCurso",{url:"/cursos/:cursoId/edit",templateUrl:"modules/cursos/views/edit-curso.client.view.html"})}]),angular.module("cursos").controller("CursosController",["$scope","$stateParams","$location","Authentication","Cursos",function($scope,$stateParams,$location,Authentication,Cursos){$scope.authentication=Authentication,$scope.create=function(){var curso=new Cursos({designacao:this.designacao});curso.$save(function(response){$scope.designacao="",$location.path("cursos/create")},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(curso){if(curso){curso.$remove();for(var i in $scope.cursos)$scope.cursos[i]===curso&&$scope.cursos.splice(i,1)}else $scope.curso.$remove(function(){$location.path("cursos")})},$scope.update=function(){var curso=$scope.curso;curso.$update(function(){$location.path("cursos/"+curso._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.cursos=Cursos.query()},$scope.findOne=function(){$scope.curso=Cursos.get({cursoId:$stateParams.cursoId})}}]),angular.module("cursos").factory("Cursos",["$resource",function($resource){return $resource("cursos/:cursoId",{cursoId:"@_id"},{update:{method:"PUT"},listar:{method:"GET",url:"/cursos/listar",isArray:!0}})}]),angular.module("disciplinas").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Disciplinas","disciplinas","dropdown","/disciplinas(/create)?"),Menus.addSubMenuItem("topbar","disciplinas","List Disciplinas","disciplinas"),Menus.addSubMenuItem("topbar","disciplinas","New Disciplina","disciplinas/create")}]),angular.module("disciplinas").config(["$stateProvider",function($stateProvider){$stateProvider.state("listDisciplinas",{url:"/disciplinas",templateUrl:"modules/disciplinas/views/list-disciplinas.client.view.html"}).state("createDisciplina",{url:"/disciplinas/create",templateUrl:"modules/disciplinas/views/create-disciplina.client.view.html"}).state("viewDisciplina",{url:"/disciplinas/:disciplinaId",templateUrl:"modules/disciplinas/views/view-disciplina.client.view.html"}).state("editDisciplina",{url:"/disciplinas/:disciplinaId/edit",templateUrl:"modules/disciplinas/views/edit-disciplina.client.view.html"})}]),angular.module("disciplinas").controller("DisciplinasController",["$scope","$stateParams","$location","Authentication","Disciplinas",function($scope,$stateParams,$location,Authentication,Disciplinas){$scope.authentication=Authentication,$scope.create=function(){var disciplina=new Disciplinas({name:this.name,plano:this.plano});disciplina.$save(function(response){$scope.name="",$scope.plano="",$location.path("disciplinas/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(disciplina){if(disciplina){disciplina.$remove();for(var i in $scope.disciplinas)$scope.disciplinas[i]===disciplina&&$scope.disciplinas.splice(i,1)}else $scope.disciplina.$remove(function(){$location.path("disciplinas")})},$scope.update=function(){var disciplina=$scope.disciplina;disciplina.$update(function(){$location.path("disciplinas/"+disciplina._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.disciplinas=Disciplinas.query()},$scope.findOne=function(){$scope.disciplina=Disciplinas.get({disciplinaId:$stateParams.disciplinaId})},$scope.direct=function(){$location.path("disciplinas/create")}}]),angular.module("disciplinas").factory("Disciplinas",["$resource",function($resource){return $resource("disciplinas/:disciplinaId",{disciplinaId:"@_id"},{update:{method:"PUT"},listar:{method:"GET",url:"/disciplinas/listar",isArray:!0}})}]),angular.module("exames").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Exames","exames","dropdown","/exames(/create)?"),Menus.addSubMenuItem("topbar","exames","List Exames","exames"),Menus.addSubMenuItem("topbar","exames","New Exame","exames/create")}]),angular.module("exames").config(["$stateProvider",function($stateProvider){$stateProvider.state("listExames",{url:"/exames",templateUrl:"modules/exames/views/list-exames.client.view.html"}).state("createExame",{url:"/exames/create",templateUrl:"modules/exames/views/create-exame.client.view.html"}).state("viewExame",{url:"/exames/:exameId",templateUrl:"modules/exames/views/view-exame.client.view.html"}).state("editExame",{url:"/exames/edit/:exameId",templateUrl:"modules/exames/views/edit-exame.client.view.html"}).state("editExameData",{url:"/exames/editData/:exameId",templateUrl:"modules/exames/views/edit-exame-data.client.view.html"})}]),angular.module("exames").controller("ExamesController",["$scope","$stateParams","$log","$location","Authentication","Exames","Disciplinas","Perguntas",function($scope,$stateParams,$location,$log,Authentication,Exames,Disciplinas,Perguntas){$scope.authentication=Authentication,$scope.tempo=120,$scope.create=function(){var exame=new Exames({});exame.$save(function(response){$location.path("exames/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(exame){if(exame){exame.$remove();for(var i in $scope.exames)$scope.exames[i]===exame&&$scope.exames.splice(i,1)}else $scope.exame.$remove(function(){$location.path("exames")})},$scope.listaDisciplinas=function(){$scope.disciplinas=Disciplinas.listar()},$scope.update=function(){var exame=$scope.exame;exame.$update(function(){$location.path("exames/"+exame._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.exames=Exames.query()},$scope.findOne=function(){$scope.exame=Exames.get({exameId:$stateParams.exameId})},$scope.callFunctions=function(){$scope.listaDisciplinas(),$scope.findOne()},$scope.animationsEnabled=!0,$scope.perguntasResolvidas=[{}],$scope.addResolvida=function(Pergunta,alternativa){},$scope.limpaCampos=function(){$scope.instruccoes="",$scope.disciplina=""},$scope.today=function(){$scope.dt=new Date},$scope.today(),$scope.clear=function(){$scope.dt=null},$scope.disabled=function(date,mode){return"day"===mode&&(0===date.getDay()||6===date.getDay())},$scope.toggleMin=function(){$scope.minDate=$scope.minDate?null:new Date},$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.direct=function(){$location.path("exames/create")},$scope.initDate=new Date,$scope.formats=["yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],$scope.format=$scope.formats[0],$scope.datepickerOptions={datepickerMode:"year",minMode:"year",minDate:"minDate",showWeeks:"false",clearText:"limpar",currentText:"hoje",closeText:"fechar"},$scope.resolver=function(){console.log("radio"+this.a56442ea899f1c3e81f385ec8);var perguntas=$scope.exame._perguntas;console.log(perguntas);for(var obj={},i=0;i<perguntas.length;i++)console.log("id "+perguntas[i]._id),console.log(obj)}}]),angular.module("exames").factory("Exames",["$resource",function($resource){return $resource("exames/:exameId",{exameId:"@_id"},{update:{method:"PUT"},listar:{method:"GET",url:"/exames/listar",isArray:!0}})}]),angular.module("membros").run(["Menus",function(Menus){}]),angular.module("membros").config(["$stateProvider",function($stateProvider){$stateProvider.state("create-membros",{url:"/membros/create",templateUrl:"modules/membros/views/create-membros.client.view.html"}).state("membros",{url:"/membros",templateUrl:"modules/membros/views/membros.client.view.html"}).state("edit",{url:"/membros/:membroId/edit",templateUrl:"modules/membros/views/edit-membro.client.view.html"}).state("delete",{url:"/membros/delete",templateUrl:"modules/membros/views/delete-membro.client.view.html"}).state("view",{url:"/membros/:membroId",templateUrl:"modules/membros/views/view-membro.client.view.html"})}]),angular.module("membros").controller("CreateMembrosController",["$scope",function($scope){}]),angular.module("membros").controller("MembrosController",["$scope","$stateParams","$location","Membros",function($scope,$stateParams,$location,Membros){$scope.currentPage=1,$scope.pageSize=10,$scope.offset=0,$scope.pageChanged=function(){$scope.offset=($scope.currentPage-1)*$scope.pageSize},$scope.create=function(){var memb=new Membros({nome:this.nome,cargo:this.cargo,username:this.username,password:this.password});memb.$save(function(response){$scope.membroActual=response._id,$location.path("tarefas/create"),$scope.nome="",$scope.cargo=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(membro){if(membro){membro.$remove();for(var i in $scope.membros)$scope.membros[i]===membro&&$scope.membros.splice(i,1)}else $scope.membro.$remove(function(){$location.path("membros/"+membro._id)});$location.path("membros")},$scope.update=function(){var $membro=$scope.membro;$membro.update(function(){$location.path("membros/"+$membro._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.membros=Membros.query()},$scope.findOne=function(){$scope.membro=Membros.get({membroId:$stateParams.membroId})},$scope.membroSearch=function(membro){$location.path("membros/"+membro._id)}}]),angular.module("membros").factory("Membros",["$resource",function($resource){return $resource("membros/:membroId",{membroId:"@_id"},{update:{method:"PUT"},listar:{method:"GET",url:"/membros/listar",isArray:!0}})}]),angular.module("pergunta-resolvidas").run(["Menus",function(Menus){}]),angular.module("pergunta-resolvidas").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPerguntaResolvidas",{url:"/pergunta-resolvidas",templateUrl:"modules/pergunta-resolvidas/views/list-pergunta-resolvidas.client.view.html"}).state("createPerguntaResolvida",{url:"/pergunta-resolvidas/create",templateUrl:"modules/pergunta-resolvidas/views/create-pergunta-resolvida.client.view.html"}).state("viewPerguntaResolvida",{url:"/pergunta-resolvidas/:perguntaResolvidaId",templateUrl:"modules/pergunta-resolvidas/views/view-pergunta-resolvida.client.view.html"}).state("editPerguntaResolvida",{url:"/pergunta-resolvidas/:perguntaResolvidaId/edit",templateUrl:"modules/pergunta-resolvidas/views/edit-pergunta-resolvida.client.view.html"})}]),angular.module("pergunta-resolvidas").controller("PerguntaResolvidasController",["$scope","$stateParams","$location","Authentication","PerguntaResolvidas","Resolucaos",function($scope,$stateParams,$location,Authentication,PerguntaResolvidas,Resolucaos){$scope.authentication=Authentication,$scope.create=function(){var perguntaResolvida=new PerguntaResolvidas({estado:this.estado,resolucao:this.resolucao._id});perguntaResolvida.$save(function(response){$location.path("pergunta-resolvidas/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.listResolucao=function(){$scope.resolucaos=Resolucaos.listar()},$scope.remove=function(perguntaResolvida){if(perguntaResolvida){perguntaResolvida.$remove();for(var i in $scope.perguntaResolvidas)$scope.perguntaResolvidas[i]===perguntaResolvida&&$scope.perguntaResolvidas.splice(i,1)}else $scope.perguntaResolvida.$remove(function(){$location.path("pergunta-resolvidas")})},$scope.update=function(){var perguntaResolvida=$scope.perguntaResolvida;perguntaResolvida.$update(function(){$location.path("pergunta-resolvidas/"+perguntaResolvida._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.perguntaResolvidas=PerguntaResolvidas.query()},$scope.findOne=function(){$scope.perguntaResolvida=PerguntaResolvidas.get({perguntaResolvidaId:$stateParams.perguntaResolvidaId})}}]),angular.module("pergunta-resolvidas").factory("PerguntaResolvidas",["$resource",function($resource){return $resource("pergunta-resolvidas/:perguntaResolvidaId",{perguntaResolvidaId:"@_id"},{update:{method:"PUT"}})}]),angular.module("perguntas").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Perguntas","perguntas","dropdown","/perguntas(/create)?"),Menus.addSubMenuItem("topbar","perguntas","List Perguntas","perguntas"),Menus.addSubMenuItem("topbar","perguntas","New Pergunta","perguntas/create")}]),angular.module("perguntas").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPerguntas",{url:"/perguntas",templateUrl:"modules/perguntas/views/list-perguntas.client.view.html"}).state("createPergunta",{url:"/perguntas/create",templateUrl:"modules/perguntas/views/create-pergunta.client.view.html"}).state("viewPergunta",{url:"/perguntas/:perguntaId",templateUrl:"modules/perguntas/views/view-pergunta.client.view.html"}).state("editPergunta",{url:"/perguntas/:perguntaId/edit",templateUrl:"modules/perguntas/views/edit-pergunta.client.view.html"})}]),angular.module("perguntas").controller("PerguntasController",["$scope","$stateParams","$location","Authentication","Perguntas","Exames",function($scope,$stateParams,$location,Authentication,Perguntas,Exames){$scope.authentication=Authentication,$scope.create=function(){var pergunta=new Perguntas({texto:this.texto,imagem:this.imagem,_exame:this.exame._id});pergunta.$save(function(response){$scope.texto="",$location.path("perguntas/create")},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(pergunta){if(pergunta){pergunta.$remove();for(var i in $scope.perguntas)$scope.perguntas[i]===pergunta&&$scope.perguntas.splice(i,1)}else $scope.pergunta.$remove(function(){$location.path("perguntas")})},$scope.listaExames=function(){$scope.exames=Exames.listar()},$scope.update=function(){var pergunta=$scope.pergunta;pergunta.$update(function(){$location.path("perguntas/"+pergunta._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.perguntas=Perguntas.query()},$scope.findOneOrigi=function(){$scope.pergunta=Perguntas.getOrigi({pergunta:$stateParams.perguntaId})},$scope.findOne=function(){$scope.pergunta=Perguntas.get({perguntaId:$stateParams.perguntaId})},$scope.callFunctions=function(){$scope.findOne(),$scope.listaExames()},$scope.direct=function(){$location.path("perguntas/create")}}]),angular.module("perguntas").factory("Perguntas",["$resource",function($resource){return $resource("perguntas/:perguntaId",{perguntaId:"@_id"},{update:{method:"PUT"},listar:{method:"GET",url:"/perguntas/listar",isArray:!0},getOrigi:{method:"GET",url:"/perguntas/getOrigi",isArray:!1}})}]),angular.module("resolucaos").run(["Menus",function(Menus){}]),angular.module("resolucaos").config(["$stateProvider",function($stateProvider){$stateProvider.state("listResolucaos",{url:"/resolucaos",templateUrl:"modules/resolucaos/views/list-resolucaos.client.view.html"}).state("createResolucao",{url:"/resolucaos/create",templateUrl:"modules/resolucaos/views/create-resolucao.client.view.html"}).state("viewResolucao",{url:"/resolucaos/:resolucaoId",templateUrl:"modules/resolucaos/views/view-resolucao.client.view.html"}).state("editResolucao",{url:"/resolucaos/:resolucaoId/edit",templateUrl:"modules/resolucaos/views/edit-resolucao.client.view.html"})}]),angular.module("resolucaos").controller("ResolucaosController",["$scope","$stateParams","$location","Authentication","Resolucaos","Exames",function($scope,$stateParams,$location,Authentication,Resolucaos,Exames){$scope.authentication=Authentication,$scope.create=function(){var resolucao=new Resolucaos({pontos:this.pontos,tempo:this.tempo,certas:this.certas,erradas:this.erradas,resolvidas:this.resolvidas,nResolvidas:this.nResolvidas,exame:this.exame._id});resolucao.$save(function(response){$location.path("resolucaos/"+response._id),$scope.pontos="",$scope.tempo="",$scope.certas="",$scope.erradas="",$scope.resolvidas="",$scope.nResolvidas=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.listaExames=function(){$scope.exames=Exames.listar()},$scope.remove=function(resolucao){if(resolucao){resolucao.$remove();for(var i in $scope.resolucaos)$scope.resolucaos[i]===resolucao&&$scope.resolucaos.splice(i,1)}else $scope.resolucao.$remove(function(){$location.path("resolucaos")})},$scope.update=function(){var resolucao=$scope.resolucao;resolucao.$update(function(){$location.path("resolucaos/"+resolucao._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.resolucaos=Resolucaos.query()},$scope.findOne=function(){$scope.resolucao=Resolucaos.get({resolucaoId:$stateParams.resolucaoId})}}]),angular.module("resolucaos").factory("Resolucaos",["$resource",function($resource){return $resource("resolucaos/:resolucaoId",{resolucaoId:"@_id"},{update:{method:"PUT"},listar:{method:"GET",url:"/resolucaos/listar",isArray:!0}})}]),angular.module("tag-perguntas").run(["Menus",function(Menus){}]),angular.module("tag-perguntas").config(["$stateProvider",function($stateProvider){
$stateProvider.state("listTagPerguntas",{url:"/tag-perguntas",templateUrl:"modules/tag-perguntas/views/list-tag-perguntas.client.view.html"}).state("createTagPergunta",{url:"/tag-perguntas/create",templateUrl:"modules/tag-perguntas/views/create-tag-pergunta.client.view.html"}).state("viewTagPergunta",{url:"/tag-perguntas/:tagPerguntaId",templateUrl:"modules/tag-perguntas/views/view-tag-pergunta.client.view.html"}).state("editTagPergunta",{url:"/tag-perguntas/:tagPerguntaId/edit",templateUrl:"modules/tag-perguntas/views/edit-tag-pergunta.client.view.html"})}]),angular.module("tag-perguntas").controller("TagPerguntasController",["$scope","$stateParams","$location","Authentication","TagPerguntas",function($scope,$stateParams,$location,Authentication,TagPerguntas){$scope.authentication=Authentication,$scope.create=function(){var tagPergunta=new TagPerguntas({name:this.name});tagPergunta.$save(function(response){$location.path("tag-perguntas/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(tagPergunta){if(tagPergunta){tagPergunta.$remove();for(var i in $scope.tagPerguntas)$scope.tagPerguntas[i]===tagPergunta&&$scope.tagPerguntas.splice(i,1)}else $scope.tagPergunta.$remove(function(){$location.path("tag-perguntas")})},$scope.update=function(){var tagPergunta=$scope.tagPergunta;tagPergunta.$update(function(){$location.path("tag-perguntas/"+tagPergunta._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.tagPerguntas=TagPerguntas.query()},$scope.findOne=function(){$scope.tagPergunta=TagPerguntas.get({tagPerguntaId:$stateParams.tagPerguntaId})}}]),angular.module("tag-perguntas").factory("TagPerguntas",["$resource",function($resource){return $resource("tag-perguntas/:tagPerguntaId",{tagPerguntaId:"@_id"},{update:{method:"PUT"}})}]),angular.module("tags").run(["Menus",function(Menus){}]),angular.module("tags").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTags",{url:"/tags",templateUrl:"modules/tags/views/list-tags.client.view.html"}).state("createTag",{url:"/tags/create",templateUrl:"modules/tags/views/create-tag.client.view.html"}).state("viewTag",{url:"/tags/:tagId",templateUrl:"modules/tags/views/view-tag.client.view.html"}).state("editTag",{url:"/tags/:tagId/edit",templateUrl:"modules/tags/views/edit-tag.client.view.html"})}]),angular.module("tags").controller("TagsController",["$scope","$stateParams","$location","Authentication","Tags",function($scope,$stateParams,$location,Authentication,Tags){$scope.authentication=Authentication,$scope.create=function(){var tag=new Tags({name:this.name});tag.$save(function(response){$location.path("tags/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(tag){if(tag){tag.$remove();for(var i in $scope.tags)$scope.tags[i]===tag&&$scope.tags.splice(i,1)}else $scope.tag.$remove(function(){$location.path("tags")})},$scope.update=function(){var tag=$scope.tag;tag.$update(function(){$location.path("tags/"+tag._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.tags=Tags.query()},$scope.findOne=function(){$scope.tag=Tags.get({tagId:$stateParams.tagId})}}]),angular.module("tags").factory("Tags",["$resource",function($resource){return $resource("tags/:tagId",{tagId:"@_id"},{update:{method:"PUT"}})}]),angular.module("tarefas").run(["Menus",function(Menus){}]),angular.module("tarefas").config(["$stateProvider",function($stateProvider){$stateProvider.state("create-tarefa",{url:"/tarefas/create",templateUrl:"modules/tarefas/views/create-tarefa.client.view.html"}).state("tarefas",{url:"/tarefas",templateUrl:"modules/tarefas/views/tarefas.client.view.html"}).state("viewTarefa",{url:"/tarefas/:tarefaId",templateUrl:"modules/tarefas/views/view-tarefa.client.view.html"})}]),angular.module("tarefas").controller("TarefasController",["$scope","$stateParams","$location","Tarefas","Membros",function($scope,$stateParams,$location,Tarefas,Membros){$scope.create=function(){var tarefa=new Tarefas({titulo:this.titulo,descriccao:this.descriccao,prazo:this.prazo,membro:this.membro._id});tarefa.$save(function(response){$location.path("tarefas")},function(errorResponse){$location.path("tarefas"),$scope.error=errorResponse.data.message})},$scope["delete"]=function(tarefa){if(tarefa){tarefa.$remove();for(var i in $scope.tarefas)$scope.tarefas[i]===tarefa&&$scope.tarefas.splice(i,1)}else $scope.tarefa.$remove(function(){$location.path("tarefas")})},$scope.update=function(){var tarefa=$scope.tarefa;tarefa.$update(function(response){$location.path("tarefas")},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.tarefas=Tarefas.query()},$scope.findOne=function(){var tarefa=Tarefas.get({tarefaId:$stateParams.tarefaId});$scope.tarefa=tarefa},$scope.tarefaSearch=function(item){$location.path("tarefas/"+item._id)},$scope.listaMembros=function(){$scope.membros=Membros.listar()},$scope.open=function($event){$scope.status.opened=!0},$scope.sort=function(keyname){$scope.sortKey=keyname,$scope.reverse=!$scope.reverse},$scope.diferenca=function(prazo){var data=prazo.split("/"),dt1=data.split("/"),dt2=prazo.split("/"),one=new Date(dt1[2],dt1[1]-1,dt1[0]),two=new Date(dt2[2],dt2[1]-1,dt2[0]),millisecondsPerDay=864e5,millisBetween=two.getTime()-one.getTime(),days=millisBetween/millisecondsPerDay;return Math.floor(days)}}]),angular.module("tarefas").factory("Tarefas",["$resource",function($resource){return $resource("tarefas/:tarefaId",{tarefaId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);